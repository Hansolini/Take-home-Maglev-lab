function [bx,by,bz] = computeFieldTotal(x,y,z,eta,u,params,modelName)
%% Field from base
[bxBase,byBase,bzBase] = computeFieldBase(x,y,z,u,params,modelName);

%% Field from levitating magnet
% Relative position and rotation of points
R = rot(eta(4),eta(5),eta(6));
pRotated = inv(R)*(eta(1:3) - [x(:)';y(:)';z(:)']);

% Compute Field
I = -params.magnet.J/params.physical.mu0*params.magnet.l/2;
switch modelName
    case {'accurate','filament'}
        [bxMagnet,byMagnet,bzMagnet] = computeFieldCircularCurrentSheetCartesian(...
            pRotated(1),...
            pRotated(2),...
            pRotated(3),...
            params.magnet.r,...
            params.magnet.l,...
            I,...
            params.physical.mu0);

    otherwise % Default is 'fast'
        [bxMagnet,byMagnet,bzMagnet] = computeFieldCircularWireCartesian(...
            pRotated(1),...
            pRotated(2),...
            pRotated(3),...
            params.magnet.r,...
            I,...
            params.physical.mu0);
end
bMagnet = R*[bxMagnet; byMagnet; bzMagnet];
bxMagnet = bMagnet(1);
byMagnet = bMagnet(2);
bzMagnet = bMagnet(3);

%% Total field
bx = bxBase + bxMagnet;
by = byBase + byMagnet;
bz = bzBase + bzMagnet;
