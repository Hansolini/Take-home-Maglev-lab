/**
 * @example   "1.FilteredAnalog-Advanced.ino"
 * 
 * 1.FilteredAnalog-Advanced
 * =========================
 *
 * This examples shows how to filter an analog input, so you can get the 
 * position of a knob or fader without noise.
 * 
 * @boards  AVR, AVR USB, Nano Every, Nano 33 IoT, Nano 33 BLE, Due, Teensy 3.x, ESP8266, ESP32
 * 
 * Connections
 * -----------
 * 
 * - A0: wiper of a potentiometer
 * 
 * Connect the left terminal of the potentiometer to ground, and the right one
 * to V<sub>CC</sub>.
 * 
 * Behavior
 * --------
 * 
 * - Upload the sketch to the Arduino, and open the Serial Monitor 
 *   (`CTRL+Shift+M`)
 * - When you turn the potentiometer, you should see the position of the 
 *   potentiometer being printed as a number between 0 and 1023.
 * - The analog input is filtered, so there shouldn't be any noise on the 
 *   position. If there is, check your wiring, and make sure that the resistance
 *   of the potentiometer isn't too high (10 kΩ is ideal). 
 * 
 * A simpler version of this example can be found in 
 * @ref 1.FilteredAnalog.ino.
 * 
 * Written by PieterP, 2019-10-10  
 * https://github.com/tttapa/Arduino-Filters
 */

/**
 * @example   "1.FilteredAnalog.ino"
 * 
 * 1.FilteredAnalog
 * ================
 *
 * This examples shows how to filter an analog input, so you can get the 
 * position of a knob or fader without noise.
 * 
 * @boards  AVR, AVR USB, Nano Every, Nano 33 IoT, Nano 33 BLE, Due, Teensy 3.x, ESP8266, ESP32
 * 
 * Connections
 * -----------
 * 
 * - A0: wiper of a potentiometer
 * 
 * Connect the left terminal of the potentiometer to ground, and the right one
 * to V<sub>CC</sub>.
 * 
 * Behavior
 * --------
 * 
 * - Upload the sketch to the Arduino, and open the Serial Monitor 
 *   (`CTRL+Shift+M`)
 * - When you turn the potentiometer, you should see the position of the 
 *   potentiometer being printed as a number between 0 and 1023.
 * - The analog input is filtered, so there shouldn't be any noise on the 
 *   position. If there is, check your wiring, and make sure that the resistance
 *   of the potentiometer isn't too high (10 kΩ is ideal). 
 * 
 * The example @ref 1.FilteredAnalog-Advanced.ino has more information about the
 * parameters you can pass to the FilteredAnalog class to tweak the filters,
 * increase the resolution, etc.
 * 
 * Written by PieterP, 2019-10-10  
 * https://github.com/tttapa/Arduino-Filters
 */

/**
 * @example   "SimpleMovingAverage.ino"
 * 
 * SimpleMovingAverage
 * ===================
 *
 * Example of a Simple Moving Average (SMA, also known as Running Average) 
 * filter.
 * 
 * @boards  AVR, AVR USB, Nano 33 IoT, Nano 33 BLE, Due, Teensy 3.x, ESP8266, ESP32
 * 
 * Written by PieterP, 2020-01-07  
 * https://github.com/tttapa/Arduino-Filters
 */

/**
 * @example   "Butterworth.ino"
 * 
 * Butterworth
 * ===========
 *
 * Example of Butterworth filter.
 * 
 * @boards  AVR, AVR USB, Nano 33 IoT, Nano 33 BLE, Due, Teensy 3.x, ESP8266, ESP32
 * 
 * @see <https://tttapa.github.io/Pages/Mathematics/Systems-and-Control-Theory/Analog-Filters/Butterworth-Filters.html>
 * 
 * Written by PieterP, 2019-11-12  
 * https://github.com/tttapa/Arduino-Filters
 */

/**
 * @example   "MedianFilter.ino"
 * 
 * MedianFilter
 * ============
 *
 * Example of median filter.
 * 
 * @boards  AVR, AVR USB, Nano 33 IoT, Nano 33 BLE, Due, Teensy 3.x, ESP8266, ESP32
 * 
 * Written by PieterP, 2019-11-16  
 * https://github.com/tttapa/Arduino-Filters
 */

/**
 * @example   "FIRNotch.ino"
 * 
 * FIRNotch
 * ========
 *
 * Example of 50 Hz (+harmonics) notch filter.
 * 
 * @boards  AVR, AVR USB, Nano 33 IoT, Nano 33 BLE, Due, Teensy 3.x, ESP8266, ESP32
 * 
 * @see <https://tttapa.github.io/Pages/Mathematics/Systems-and-Control-Theory/Digital-filters/FIR-Notch.html>
 * 
 * Be careful when selecting a sampling frequency that's a multiple of 50 Hz, as
 * this will alias 50 Hz harmonics to 0 Hz (DC), and this might introduce a more
 * or less constant error to your measurements.  
 * It's best to add an analog anti-aliasing filter as well.
 * 
 * ![Filtered mains power noise signal (blue is unfilterd, red is filtered)](50Hz-notch.png)
 * 
 * Written by PieterP, 2019-11-22  
 * https://github.com/tttapa/Arduino-Filters
 */

